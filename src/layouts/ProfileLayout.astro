---
import { getUser } from "@/lib/auth-utils";

const user = await getUser(Astro);
---

<div class="drawer lg:drawer-open font-quicksand">
  <input id="my-drawer" type="checkbox" class="drawer-toggle" />

  <div class="drawer-content">
    <slot />
    <label 
      for="my-drawer" 
      class="btn btn-ghost drawer-button fixed top-18 left-0 lg:hidden z-50"
    >
    <svg 
        id="drawer-icon" 
        xmlns="http://www.w3.org/2000/svg" 
        width="24" 
        height="24" 
        viewBox="0 0 24 24" 
        fill="none" 
        stroke="currentColor" 
        stroke-width="2" 
        stroke-linecap="round" 
        stroke-linejoin="round" 
        class="transition-transform duration-200"
      >
        <!-- Default: Panel Open (when drawer is closed) -->
        <g id="open-icon">
          <rect width="18" height="18" x="3" y="3" rx="2"/>
          <path d="M9 3v18"/>
          <path d="m14 9 3 3-3 3"/>
        </g>
        <!-- Close icon (when drawer is open) -->
        <g id="close-icon" class="hidden">
          <rect width="18" height="18" x="3" y="3" rx="2"/>
          <path d="M9 3v18"/>
          <path d="m16 9-3 3 3 3"/>
        </g>
      </svg>
     <!-- <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-panel-left-open-icon lucide-panel-left-open"><rect width="18" height="18" x="3" y="3" rx="2"/><path d="M9 3v18"/><path d="m14 9 3 3-3 3"/></svg> -->
    </label>
  </div>
  
  <!-- Sidebar -->
  <div class="drawer-side">
    <label for="my-drawer" aria-label="close sidebar" class="drawer-overlay"></label>
    {user ? (
      <aside class="menu bg-base-200 text-base-content min-h-full w-82 py-20 px-4">
        {/* <!-- User Profile Section --> */}
        <div class="mb-6 p-4 bg-base-100 rounded-lg shadow-sm">
          <div class="flex items-center space-x-3">
            <div class="avatar avatar-online">
              <div class="w-12 h-12 rounded-full bg-primary text-primary-content flex items-center justify-center">
                {user.image ? (
                  <img 
                    src={user.image} 
                    alt={user.name} 
                    class="w-full h-full rounded-full object-cover"
                  />
                ) : (
                  <span class="text-lg font-semibold capitalize">
                    {user.name?.charAt(0) || 'U'}
                  </span>
                )}
              </div>
            </div>
            
            <div class="flex-1 min-w-0">
              <h3 class="font-semibold text-base truncate">
                {user.name || 'User'}
              </h3>
              <p class="text-sm opacity-70 truncate">
                {user.email}
              </p>
            </div>
          </div>
        </div>

        {/* <!-- Navigation Menu --> */}
        <ul class="space-y-1">
          <li>
            <a href="/admin/dashboard" class="flex items-center space-x-3 p-3 rounded-lg hover:bg-base-100 transition-colors">
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2-2z"></path>
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 5a2 2 0 012-2h4a2 2 0 012 2v3H8V5z"></path>
              </svg>
              <span>Dashboard</span>
            </a>
          </li>
          
          <li>
            <a href="/admin/analytics" class="flex items-center space-x-3 p-3 rounded-lg hover:bg-base-100 transition-colors">
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
              </svg>
              <span>Analytics</span>
            </a>
          </li>
          
          <li>
            <a href="/admin/orders" class="flex items-center space-x-3 p-3 rounded-lg hover:bg-base-100 transition-colors">
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"></path>
              </svg>
              <span>Orders</span>
            </a>
          </li>
          
          <li>
            <a href="/admin/customers" class="flex items-center space-x-3 p-3 rounded-lg hover:bg-base-100 transition-colors">
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z"></path>
              </svg>
              <span>Customers</span>
            </a>
          </li>
          
          {/* <!-- Divider --> */}
          <div class="divider my-4"></div>
          
          <li>
            <a href="/admin/profile" class="flex items-center space-x-3 p-3 rounded-lg hover:bg-base-100 transition-colors">
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
              </svg>
              <span>Profile</span>
            </a>
          </li>
          
          <li>
            <a href="/admin/settings" class="flex items-center space-x-3 p-3 rounded-lg hover:bg-base-100 transition-colors">
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"></path>
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
              </svg>
              <span>Settings</span>
            </a>
          </li>
        </ul>

        {/* <!-- Logout Button --> */}
        <div class="mt-auto pt-4">
          <button 
            id="logoutBtn" 
            class="btn btn-error btn-outline w-full flex items-center justify-center space-x-2"
          >
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"></path>
            </svg>
            <span>Logout</span>
          </button>
        </div>
      </aside>
    ) : (
      // <!-- Guest Menu -->
      <aside class="menu bg-base-200 text-base-content min-h-full w-60 p-4">
        <div class="flex flex-col items-center justify-center h-full space-y-4">
          <div class="text-center mb-6">
            <h3 class="text-lg font-semibold mb-2">Welcome!</h3>
            <p class="text-sm opacity-70">Please sign in to access admin features</p>
          </div>
          
          <div class="space-y-3 w-full">
            <a href="/login" class="btn btn-primary w-full">
              Sign In
            </a>
            <a href="/register" class="btn btn-outline w-full">
              Create Account
            </a>
          </div>
        </div>
      </aside>
    )}
  </div>
</div>

{user && (
  <script>
    document.getElementById('logoutBtn')?.addEventListener('click', async () => { 
      const button = document.getElementById('logoutBtn') as HTMLButtonElement;

      try { 
        if (button) {
          button.classList.add('loading');
          button.disabled = true;
        }
        
        const response = await fetch('/api/auth/sign-out', {
          method: 'POST',
          credentials: 'include',
        });
        
        if (response.ok) {
          window.location.href = '/';
        } else {
          throw new Error('Logout failed');
        }
      } catch (error) {
        console.error('Logout failed:', error);
        
        // Reset button state on error
        if (button) {
          button.classList.remove('loading');
          button.disabled = false;
        }
        
        // Show error message
        alert('Logout failed. Please try again.');
      }
    });
  </script>
)}

<script>
  // Handle drawer toggle icon changes
  const drawerCheckbox = document.getElementById('my-drawer') as HTMLInputElement;
  const openIcon = document.getElementById('open-icon');
  const closeIcon = document.getElementById('close-icon');
  
  function updateDrawerIcon() {
    if (drawerCheckbox?.checked) {
      // Drawer is open - show close icon
      openIcon?.classList.add('hidden');
      closeIcon?.classList.remove('hidden');
    } else {
      // Drawer is closed - show open icon
      openIcon?.classList.remove('hidden');
      closeIcon?.classList.add('hidden');
    }
  }
  
  // Listen for checkbox changes
  drawerCheckbox?.addEventListener('change', updateDrawerIcon);
  
  // Set initial state
  updateDrawerIcon();
</script>