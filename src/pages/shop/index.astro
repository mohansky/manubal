---
import ProductList from "@/components/Product/ProductList.astro";
import Container from "@/components/ui/Container.astro";
import Heading from "@/components/ui/Heading.astro";
import Layout from "@/layouts/Layout.astro"; 
import { getCollection, type CollectionEntry } from "astro:content";

let productEntries: CollectionEntry<'products'>[] = [];
try {
  productEntries = await getCollection("products");
  console.log("Products found:", productEntries.length);
} catch (error) {
  console.error("Error loading products collection:", error);
}

const publishedProducts = productEntries
  .filter(entry => entry.data.published === true);

const url = new URL(Astro.request.url);
const categoryParam = url.searchParams.get("category");
const categoryVariants = [
  { name: "All", value: "" },
  { name: "Macrame", value: "Macrame" },
  { name: "Stitching", value: "Stitching" },
];

const filteredProducts = categoryParam && categoryParam !== ""
  ? publishedProducts.filter(product => 
      product.data.category === categoryParam
    )
  : publishedProducts;
---


<Layout>
  <Container width="marginxy">
    <div class="flex flex-wrap justify-between mb-8">
      <div>
        <Heading size="md" class="mb-5">Products</Heading>
        <div class="flex flex-wrap">
          {categoryVariants.map((item) => {
            const isActive = 
              item.value === categoryParam || 
              (item.value === "" && (!categoryParam || categoryParam === ""));
            
            return (
              <a
                href={item.value ? `/shop?category=${item.value}` : "/shop"}
                class={`mb-4 mr-3 px-4 py-2 text-sm font-semibold rounded-lg inline-block
                  ${isActive 
                    ? "bg-black text-white" 
                    : "bg-muted hover:bg-black hover:text-white focus:bg-black focus:text-white"
                  }`}
              >
                {item.name}
              </a>
            );
          })}
        </div>
      </div>
    </div>
   
    <div class="mt-4 mb-4">
      <p class="text-xs text-muted">Showing {filteredProducts.length} of {publishedProducts.length} products</p>
      {categoryParam && filteredProducts.length === 0 && (
        <p class="text-red-500">No products found in the "{categoryParam}" category.</p>
      )}
    </div>
   
    {publishedProducts.length > 0 ? (
      <ProductList products={filteredProducts} />
    ) : (
      <div class="text-center py-12">
        <p>No products available at this time. Please check back later.</p>
      </div>
    )}

 
  </Container>
</Layout>