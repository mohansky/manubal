---
import Layout from "@/layouts/Layout.astro";
import ProfileLayout from "@/layouts/ProfileLayout.astro";
import Container from "@/components/ui/Container.astro";
import { getUser } from "@/lib/auth-utils";

const user = await getUser(Astro);

if (!user) {
  return Astro.redirect("/login");
}

if (!user.emailVerified) {
  return Astro.redirect("/emailVerification");
}
---

<Layout title="Security Settings">
  <ProfileLayout title="Security Settings">
    <Container width="marginy">
      <div class="max-w-2xl mx-auto">
        <div class="breadcrumbs text-sm mb-6">
          <ul>
            <li><a href="/admin/dashboard">Dashboard</a></li>
            <li>Security Settings</li>
          </ul>
        </div>

        <div class="card bg-base-100 shadow-xl">
          <div class="card-body">
            <h2 class="card-title mb-6">Change Password</h2>

            <form id="passwordForm" class="space-y-6">
              <div class="form-control">
                <label class="label">
                  <span class="label-text">Current Password</span>
                </label>
                <input
                  type="password"
                  name="currentPassword"
                  class="input input-bordered w-full"
                  required
                />
              </div>

              <div class="form-control">
                <label class="label">
                  <span class="label-text">New Password</span>
                </label>
                <input
                  type="password"
                  name="newPassword"
                  class="input input-bordered w-full"
                  required
                  minlength="6"
                />
                <label class="label">
                  <span class="label-text-alt">Minimum 6 characters</span>
                </label>
              </div>

              <div class="form-control">
                <label class="label">
                  <span class="label-text">Confirm New Password</span>
                </label>
                <input
                  type="password"
                  name="confirmPassword"
                  class="input input-bordered w-full"
                  required
                  minlength="6"
                />
              </div>

              <div id="successAlert" class="alert alert-success hidden">
                <span>Password updated successfully!</span>
              </div>

              <div id="errorAlert" class="alert alert-error hidden">
                <span id="errorMessage"></span>
              </div>

              <div class="card-actions justify-end space-x-2">
                <a href="/admin/dashboard" class="btn btn-ghost">Cancel</a>
                <button type="submit" id="submitBtn" class="btn btn-primary">
                  Update Password
                </button>
              </div>
            </form>
          </div>
        </div>

        <!-- Danger Zone -->
        <div class="card bg-base-100 shadow-xl mt-8 border-error">
          <div class="card-body">
            <h2 class="card-title text-error mb-6">Danger Zone</h2>

            <div class="alert alert-warning">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                class="stroke-current shrink-0 h-6 w-6"
                fill="none"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.728-.833-2.498 0L3.732 16c-.77.833.192 2.5 1.732 2.5z"
                ></path>
              </svg>
              <span>Account deletion is permanent and cannot be undone.</span>
            </div>

            <div class="card-actions justify-end">
              <button
                class="btn btn-error"
                onclick="deleteAccountModal.showModal()"
              >
                Delete Account
              </button>
            </div>
          </div>
        </div>
      </div>

      <!-- Delete Account Modal -->
      <dialog id="deleteAccountModal" class="modal">
        <div class="modal-box">
          <h3 class="font-bold text-lg text-error">Delete Account</h3>
          <p class="py-4">
            Are you absolutely sure? This action cannot be undone.
          </p>
          <div class="modal-action">
            <form method="dialog">
              <button class="btn">Cancel</button>
            </form>
            <button id="confirmDeleteBtn" class="btn btn-error"
              >Delete Forever</button
            >
          </div>
        </div>
      </dialog>
    </Container>
  </ProfileLayout>
</Layout>

<script>
  // Password form handler
  document
    .getElementById("passwordForm")
    ?.addEventListener("submit", async (e) => {
      e.preventDefault();

      const form = e.target as HTMLFormElement;
      const formData = new FormData(form);
      const currentPassword = formData.get("currentPassword") as string;
      const newPassword = formData.get("newPassword") as string;
      const confirmPassword = formData.get("confirmPassword") as string;

      const submitBtn = document.getElementById(
        "submitBtn"
      ) as HTMLButtonElement;
      const errorAlert = document.getElementById("errorAlert") as HTMLElement;
      const successAlert = document.getElementById(
        "successAlert"
      ) as HTMLElement;
      const errorMessage = document.getElementById(
        "errorMessage"
      ) as HTMLElement;

      // Validate passwords match
      if (newPassword !== confirmPassword) {
        errorMessage.textContent = "New passwords do not match";
        errorAlert.classList.remove("hidden");
        return;
      }

      // Show loading state
      submitBtn.classList.add("loading");
      submitBtn.disabled = true;
      errorAlert.classList.add("hidden");
      successAlert.classList.add("hidden");

      try {
        const response = await fetch("/api/auth/change-password", {
          method: "PATCH",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ currentPassword, newPassword }),
          credentials: "include",
        });

        const result = await response.json();

        if (response.ok && !result.error) {
          successAlert.classList.remove("hidden");
          form.reset();
        } else {
          errorMessage.textContent =
            result.error?.message || "Password update failed";
          errorAlert.classList.remove("hidden");
        }
      } catch (error) {
        errorMessage.textContent = "An error occurred. Please try again.";
        errorAlert.classList.remove("hidden");
      } finally {
        submitBtn.classList.remove("loading");
        submitBtn.disabled = false;
      }
    });

  // Delete account handler
  document
    .getElementById("confirmDeleteBtn")
    ?.addEventListener("click", async () => {
      try {
        const response = await fetch("/api/auth/delete-account", {
          method: "DELETE",
          credentials: "include",
        });

        if (response.ok) {
          window.location.href = "/";
        }
      } catch (error) {
        console.error("Delete account failed:", error);
      }
    });
</script>
