--- 
import Container from "@/components/ui/Container.astro";
import Layout from "@/layouts/Layout.astro";
import ProfileLayout from "@/layouts/ProfileLayout.astro";
import { getUser } from "@/lib/auth-utils";

const user = await getUser(Astro);

if (!user) {
  return Astro.redirect("/login");
}

if (!user.emailVerified) {
  return Astro.redirect("/emailVerification");
}
---

<Layout title="Profile Settings">
  <ProfileLayout>
    <Container width="marginy"> 
        <div class="max-w-2xl mx-auto">
          <div class="breadcrumbs text-sm mb-6">
            <ul>
              <li><a href="/dashboard">Dashboard</a></li>
              <li>Profile Settings</li>
            </ul>
          </div>

          <div class="card bg-base-100 shadow-xl">
            <div class="card-body">
              <h2 class="card-title mb-6">Profile Information</h2>

              <form id="profileForm" class="space-y-6">
                <div class="form-control">
                  <label class="label">
                    <span class="label-text">Full Name</span>
                  </label>
                  <input
                    type="text"
                    name="name"
                    value={user.name}
                    class="input input-bordered w-full"
                    required
                  />
                </div>

                <div class="form-control">
                  <label class="label">
                    <span class="label-text">Email Address</span>
                  </label>
                  <input
                    type="email"
                    value={user.email}
                    class="input input-bordered w-full"
                    disabled
                  />
                  <label class="label">
                    <span class="label-text-alt">Email cannot be changed</span>
                  </label>
                </div>

                <div class="form-control">
                  <label class="label">
                    <span class="label-text">Profile Image URL (Optional)</span>
                  </label>
                  <input
                    type="url"
                    name="image"
                    value={user.image || ""}
                    placeholder="https://example.com/avatar.jpg"
                    class="input input-bordered w-full"
                  />
                </div>

                <div id="successAlert" class="alert alert-success hidden">
                  <span id="successMessage">Profile updated successfully!</span>
                </div>

                <div id="errorAlert" class="alert alert-error hidden">
                  <span id="errorMessage"></span>
                </div>

                <div class="card-actions justify-end space-x-2">
                  <a href="/dashboard" class="btn btn-ghost">Cancel</a>
                  <button type="submit" id="submitBtn" class="btn btn-primary">
                    Save Changes
                  </button>
                </div>
              </form>
            </div>
          </div>
        </div> 
    </Container>
  </ProfileLayout>
</Layout>
 

<script> 
import { authClient } from "@/lib/auth-client";

  document
    .getElementById("profileForm")
    ?.addEventListener("submit", async (e) => {
      e.preventDefault();

      const form = e.target as HTMLFormElement;
      const formData = new FormData(form);
      const name = formData.get("name") as string;
      const image = formData.get("image") as string;

      const submitBtn = document.getElementById(
        "submitBtn"
      ) as HTMLButtonElement;
      const errorAlert = document.getElementById("errorAlert") as HTMLElement;
      const successAlert = document.getElementById(
        "successAlert"
      ) as HTMLElement;
      const errorMessage = document.getElementById(
        "errorMessage"
      ) as HTMLElement;

      // Show loading state
      submitBtn.classList.add("loading");
      submitBtn.disabled = true;
      errorAlert.classList.add("hidden");
      successAlert.classList.add("hidden");

      try {
        const { data, error } = await authClient.updateUser({
          name,
          image: image || undefined,
        });

        if (data && !error) {
          successAlert.classList.remove("hidden");
          setTimeout(() => window.location.reload(), 1500);
        } else {
          errorMessage.textContent = error?.message || "Update failed";
          errorAlert.classList.remove("hidden");
        }
      } catch (error) {
        errorMessage.textContent = "An error occurred. Please try again.";
        errorAlert.classList.remove("hidden");
      } finally {
        submitBtn.classList.remove("loading");
        submitBtn.disabled = false;
      }
    });
</script>
